{"ast":null,"code":"var _jsxFileName = \"/Users/antonantonenko/Desktop/bw/src/my-game/src/components/combat/CombatSystem.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useRef } from 'react';\nimport styled from 'styled-components';\nimport FightButton from './FightButton';\nimport { useNavigate } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst BattleArea = styled.div`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  width: 100%;\n  margin-bottom: 20px;\n`;\n_c = BattleArea;\nconst CharacterBox = styled.div`\n  width: 900px;\n  height: 1200px;\n  border: 2px solid #000;\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  padding: 10px;\n  background-color: #fff;\n  margin: 0 10px;\n`;\n_c2 = CharacterBox;\nconst CharacterImage = styled.div`\n  width: 880px;\n  height: 880px;\n  background-color: #ccc;\n  margin-bottom: 10px;\n  display: flex;\n  flex-direction: column;\n  justify-content: space-between;\n  align-items: center;\n  font-size: 24px;\n  position: relative;\n`;\n_c3 = CharacterImage;\nconst CheckboxLabel = styled.label`\n  position: absolute;\n  display: flex;\n  align-items: center;\n  font-size: 24px;\n  cursor: pointer;\n\n  &.head { top: 30px; left: 50%; transform: translateX(-50%); }\n  &.torso { top: 50%; left: 50%; transform: translate(-50%, -50%); }\n  &.left-arm { top: 50%; left: 30px; transform: translateY(-50%); }\n  &.right-arm { top: 50%; right: 30px; transform: translateY(-50%); }\n  &.legs { bottom: 30px; left: 50%; transform: translateX(-50%); }\n\n  input {\n    width: 20px;\n    height: 20px;\n    margin-right: 10px;\n  }\n`;\n_c4 = CheckboxLabel;\nconst MeterContainer = styled.div`\n  width: 100%;\n  height: 40px;\n  background-color: #eee;\n  margin-bottom: 10px;\n`;\n_c5 = MeterContainer;\nconst Meter = styled.div`\n  height: 100%;\n  width: ${props => props.value}%;\n  background-color: ${props => props.color};\n`;\n_c6 = Meter;\nconst CharacterStats = styled.div`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  font-size: 24px;\n`;\n_c7 = CharacterStats;\nconst ChatLog = styled.div`\n  width: 80%;\n  height: 300px;\n  overflow-y: auto;\n  border: 1px solid #000;\n  padding: 10px;\n  margin-top: 20px;\n  background-color: #fff;\n  font-size: 18px;\n`;\n_c8 = ChatLog;\nconst PopupOverlay = styled.div`\n  position: fixed;\n  top: 0;\n  left: 0;\n  right: 0;\n  bottom: 0;\n  background-color: rgba(0, 0, 0, 0.5);\n  display: flex;\n  justify-content: center;\n  align-items: center;\n`;\n_c9 = PopupOverlay;\nconst PopupContent = styled.div`\n  background-color: white;\n  padding: 20px;\n  border-radius: 5px;\n  text-align: center;\n  font-size: 24px;\n`;\n_c10 = PopupContent;\nconst PopupButton = styled.button`\n  margin-top: 10px;\n  padding: 10px 20px;\n  cursor: pointer;\n  font-size: 20px;\n`;\n_c11 = PopupButton;\nconst FightButtonWrapper = styled.div`\n  position: absolute;\n  top: 50%;\n  left: 50%;\n  transform: translate(-50%, -50%);\n  z-index: 1;\n`;\n_c12 = FightButtonWrapper;\nconst bodyParts = ['Head', 'Torso', 'Left Arm', 'Right Arm', 'Legs'];\nconst CombatSystem = () => {\n  _s();\n  const [playerHealth, setPlayerHealth] = useState(100);\n  const [monsterHealth, setMonsterHealth] = useState(100);\n  const [playerAttack, setPlayerAttack] = useState('');\n  const [playerDefense, setPlayerDefense] = useState('');\n  const [chatLog, setChatLog] = useState([]);\n  const [isFightButtonDisabled, setIsFightButtonDisabled] = useState(false);\n  const [showPopup, setShowPopup] = useState(false);\n  const [popupMessage, setPopupMessage] = useState('');\n  const navigate = useNavigate();\n  const chatLogRef = useRef(null);\n  const addToChatLog = message => {\n    setChatLog(prevLog => [...prevLog, message]);\n  };\n  useEffect(() => {\n    if (chatLogRef.current) {\n      chatLogRef.current.scrollTop = chatLogRef.current.scrollHeight;\n    }\n  }, [chatLog]);\n  const handleFight = () => {\n    if (!playerAttack || !playerDefense) {\n      alert('Please select both attack and defense');\n      return;\n    }\n    setIsFightButtonDisabled(true);\n    const monsterAttack = bodyParts[Math.floor(Math.random() * bodyParts.length)];\n    const monsterDefense = bodyParts[Math.floor(Math.random() * bodyParts.length)];\n    let playerDamage = 0;\n    let monsterDamage = 0;\n    if (playerAttack !== monsterDefense) {\n      monsterDamage = Math.floor(Math.random() * 10) + 1;\n      setMonsterHealth(prev => Math.max(0, prev - monsterDamage));\n      addToChatLog(`Player attacked Monster's ${playerAttack} for ${monsterDamage} damage!`);\n    } else {\n      addToChatLog(`Monster successfully blocked Player's attack on ${playerAttack}!`);\n    }\n    if (monsterAttack !== playerDefense) {\n      playerDamage = Math.floor(Math.random() * 10) + 1;\n      setPlayerHealth(prev => Math.max(0, prev - playerDamage));\n      addToChatLog(`Monster attacked Player's ${monsterAttack} for ${playerDamage} damage!`);\n    } else {\n      addToChatLog(`Player successfully blocked Monster's attack on ${monsterAttack}!`);\n    }\n    addToChatLog(`Player defended ${playerDefense}.`);\n    addToChatLog(`Monster defended ${monsterDefense}.`);\n    setPlayerAttack('');\n    setPlayerDefense('');\n    setIsFightButtonDisabled(false);\n  };\n  useEffect(() => {\n    if (playerHealth <= 0) {\n      setPopupMessage('You have been defeated by the monster!');\n      setShowPopup(true);\n    } else if (monsterHealth <= 0) {\n      setPopupMessage('You have slain the monster, congrats!');\n      setShowPopup(true);\n    }\n  }, [playerHealth, monsterHealth]);\n  const handlePopupClose = () => {\n    setShowPopup(false);\n    navigate('/'); // Navigate to the main square\n  };\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(BattleArea, {\n      children: [/*#__PURE__*/_jsxDEV(CharacterBox, {\n        children: [/*#__PURE__*/_jsxDEV(CharacterImage, {\n          children: [\"Player Image\", bodyParts.map(part => /*#__PURE__*/_jsxDEV(CheckboxLabel, {\n            className: part.toLowerCase().replace(' ', '-'),\n            children: [/*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"radio\",\n              name: \"playerDefend\",\n              value: part,\n              checked: playerDefense === part,\n              onChange: e => setPlayerDefense(e.target.value)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 210,\n              columnNumber: 17\n            }, this), part]\n          }, `defend-${part}`, true, {\n            fileName: _jsxFileName,\n            lineNumber: 209,\n            columnNumber: 15\n          }, this))]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 206,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(CharacterStats, {\n          children: [/*#__PURE__*/_jsxDEV(MeterContainer, {\n            children: /*#__PURE__*/_jsxDEV(Meter, {\n              value: playerHealth,\n              color: \"#ff0000\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 223,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 222,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            children: [\"HP: \", playerHealth, \"/100\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 225,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 221,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 205,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(FightButtonWrapper, {\n        children: /*#__PURE__*/_jsxDEV(FightButton, {\n          onClick: handleFight,\n          disabled: isFightButtonDisabled\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 229,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 228,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(CharacterBox, {\n        children: [/*#__PURE__*/_jsxDEV(CharacterImage, {\n          children: [\"Monster Image\", bodyParts.map(part => /*#__PURE__*/_jsxDEV(CheckboxLabel, {\n            className: part.toLowerCase().replace(' ', '-'),\n            children: [/*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"radio\",\n              name: \"playerAttack\",\n              value: part,\n              checked: playerAttack === part,\n              onChange: e => setPlayerAttack(e.target.value)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 236,\n              columnNumber: 17\n            }, this), part]\n          }, `attack-${part}`, true, {\n            fileName: _jsxFileName,\n            lineNumber: 235,\n            columnNumber: 15\n          }, this))]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 232,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(CharacterStats, {\n          children: [/*#__PURE__*/_jsxDEV(MeterContainer, {\n            children: /*#__PURE__*/_jsxDEV(Meter, {\n              value: monsterHealth,\n              color: \"#ff0000\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 249,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 248,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            children: [\"HP: \", monsterHealth, \"/100\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 251,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 247,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 231,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 204,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(ChatLog, {\n      ref: chatLogRef,\n      children: chatLog.map((log, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n        children: log\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 257,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 255,\n      columnNumber: 7\n    }, this), showPopup && /*#__PURE__*/_jsxDEV(PopupOverlay, {\n      children: /*#__PURE__*/_jsxDEV(PopupContent, {\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          children: popupMessage\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 263,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(PopupButton, {\n          onClick: handlePopupClose,\n          children: \"OK\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 264,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 262,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 261,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true);\n};\n_s(CombatSystem, \"RN5SWEvUI2O06ZGpntOSkQqt2n0=\", false, function () {\n  return [useNavigate];\n});\n_c13 = CombatSystem;\nexport default CombatSystem;\nvar _c, _c2, _c3, _c4, _c5, _c6, _c7, _c8, _c9, _c10, _c11, _c12, _c13;\n$RefreshReg$(_c, \"BattleArea\");\n$RefreshReg$(_c2, \"CharacterBox\");\n$RefreshReg$(_c3, \"CharacterImage\");\n$RefreshReg$(_c4, \"CheckboxLabel\");\n$RefreshReg$(_c5, \"MeterContainer\");\n$RefreshReg$(_c6, \"Meter\");\n$RefreshReg$(_c7, \"CharacterStats\");\n$RefreshReg$(_c8, \"ChatLog\");\n$RefreshReg$(_c9, \"PopupOverlay\");\n$RefreshReg$(_c10, \"PopupContent\");\n$RefreshReg$(_c11, \"PopupButton\");\n$RefreshReg$(_c12, \"FightButtonWrapper\");\n$RefreshReg$(_c13, \"CombatSystem\");","map":{"version":3,"names":["React","useState","useEffect","useRef","styled","FightButton","useNavigate","jsxDEV","_jsxDEV","Fragment","_Fragment","BattleArea","div","_c","CharacterBox","_c2","CharacterImage","_c3","CheckboxLabel","label","_c4","MeterContainer","_c5","Meter","props","value","color","_c6","CharacterStats","_c7","ChatLog","_c8","PopupOverlay","_c9","PopupContent","_c10","PopupButton","button","_c11","FightButtonWrapper","_c12","bodyParts","CombatSystem","_s","playerHealth","setPlayerHealth","monsterHealth","setMonsterHealth","playerAttack","setPlayerAttack","playerDefense","setPlayerDefense","chatLog","setChatLog","isFightButtonDisabled","setIsFightButtonDisabled","showPopup","setShowPopup","popupMessage","setPopupMessage","navigate","chatLogRef","addToChatLog","message","prevLog","current","scrollTop","scrollHeight","handleFight","alert","monsterAttack","Math","floor","random","length","monsterDefense","playerDamage","monsterDamage","prev","max","handlePopupClose","children","map","part","className","toLowerCase","replace","type","name","checked","onChange","e","target","fileName","_jsxFileName","lineNumber","columnNumber","onClick","disabled","ref","log","index","_c13","$RefreshReg$"],"sources":["/Users/antonantonenko/Desktop/bw/src/my-game/src/components/combat/CombatSystem.js"],"sourcesContent":["import React, { useState, useEffect, useRef } from 'react';\nimport styled from 'styled-components';\nimport FightButton from './FightButton';\nimport { useNavigate } from 'react-router-dom';\n\nconst BattleArea = styled.div`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  width: 100%;\n  margin-bottom: 20px;\n`;\n\nconst CharacterBox = styled.div`\n  width: 900px;\n  height: 1200px;\n  border: 2px solid #000;\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  padding: 10px;\n  background-color: #fff;\n  margin: 0 10px;\n`;\n\nconst CharacterImage = styled.div`\n  width: 880px;\n  height: 880px;\n  background-color: #ccc;\n  margin-bottom: 10px;\n  display: flex;\n  flex-direction: column;\n  justify-content: space-between;\n  align-items: center;\n  font-size: 24px;\n  position: relative;\n`;\n\nconst CheckboxLabel = styled.label`\n  position: absolute;\n  display: flex;\n  align-items: center;\n  font-size: 24px;\n  cursor: pointer;\n\n  &.head { top: 30px; left: 50%; transform: translateX(-50%); }\n  &.torso { top: 50%; left: 50%; transform: translate(-50%, -50%); }\n  &.left-arm { top: 50%; left: 30px; transform: translateY(-50%); }\n  &.right-arm { top: 50%; right: 30px; transform: translateY(-50%); }\n  &.legs { bottom: 30px; left: 50%; transform: translateX(-50%); }\n\n  input {\n    width: 20px;\n    height: 20px;\n    margin-right: 10px;\n  }\n`;\n\nconst MeterContainer = styled.div`\n  width: 100%;\n  height: 40px;\n  background-color: #eee;\n  margin-bottom: 10px;\n`;\n\nconst Meter = styled.div`\n  height: 100%;\n  width: ${props => props.value}%;\n  background-color: ${props => props.color};\n`;\n\nconst CharacterStats = styled.div`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  font-size: 24px;\n`;\n\nconst ChatLog = styled.div`\n  width: 80%;\n  height: 300px;\n  overflow-y: auto;\n  border: 1px solid #000;\n  padding: 10px;\n  margin-top: 20px;\n  background-color: #fff;\n  font-size: 18px;\n`;\n\nconst PopupOverlay = styled.div`\n  position: fixed;\n  top: 0;\n  left: 0;\n  right: 0;\n  bottom: 0;\n  background-color: rgba(0, 0, 0, 0.5);\n  display: flex;\n  justify-content: center;\n  align-items: center;\n`;\n\nconst PopupContent = styled.div`\n  background-color: white;\n  padding: 20px;\n  border-radius: 5px;\n  text-align: center;\n  font-size: 24px;\n`;\n\nconst PopupButton = styled.button`\n  margin-top: 10px;\n  padding: 10px 20px;\n  cursor: pointer;\n  font-size: 20px;\n`;\n\nconst FightButtonWrapper = styled.div`\n  position: absolute;\n  top: 50%;\n  left: 50%;\n  transform: translate(-50%, -50%);\n  z-index: 1;\n`;\n\nconst bodyParts = ['Head', 'Torso', 'Left Arm', 'Right Arm', 'Legs'];\n\nconst CombatSystem = () => {\n  const [playerHealth, setPlayerHealth] = useState(100);\n  const [monsterHealth, setMonsterHealth] = useState(100);\n  const [playerAttack, setPlayerAttack] = useState('');\n  const [playerDefense, setPlayerDefense] = useState('');\n  const [chatLog, setChatLog] = useState([]);\n  const [isFightButtonDisabled, setIsFightButtonDisabled] = useState(false);\n  const [showPopup, setShowPopup] = useState(false);\n  const [popupMessage, setPopupMessage] = useState('');\n  const navigate = useNavigate();\n  const chatLogRef = useRef(null);\n\n  const addToChatLog = (message) => {\n    setChatLog(prevLog => [...prevLog, message]);\n  };\n\n  useEffect(() => {\n    if (chatLogRef.current) {\n      chatLogRef.current.scrollTop = chatLogRef.current.scrollHeight;\n    }\n  }, [chatLog]);\n\n  const handleFight = () => {\n    if (!playerAttack || !playerDefense) {\n      alert('Please select both attack and defense');\n      return;\n    }\n\n    setIsFightButtonDisabled(true);\n\n    const monsterAttack = bodyParts[Math.floor(Math.random() * bodyParts.length)];\n    const monsterDefense = bodyParts[Math.floor(Math.random() * bodyParts.length)];\n\n    let playerDamage = 0;\n    let monsterDamage = 0;\n\n    if (playerAttack !== monsterDefense) {\n      monsterDamage = Math.floor(Math.random() * 10) + 1;\n      setMonsterHealth(prev => Math.max(0, prev - monsterDamage));\n      addToChatLog(`Player attacked Monster's ${playerAttack} for ${monsterDamage} damage!`);\n    } else {\n      addToChatLog(`Monster successfully blocked Player's attack on ${playerAttack}!`);\n    }\n\n    if (monsterAttack !== playerDefense) {\n      playerDamage = Math.floor(Math.random() * 10) + 1;\n      setPlayerHealth(prev => Math.max(0, prev - playerDamage));\n      addToChatLog(`Monster attacked Player's ${monsterAttack} for ${playerDamage} damage!`);\n    } else {\n      addToChatLog(`Player successfully blocked Monster's attack on ${monsterAttack}!`);\n    }\n\n    addToChatLog(`Player defended ${playerDefense}.`);\n    addToChatLog(`Monster defended ${monsterDefense}.`);\n\n    setPlayerAttack('');\n    setPlayerDefense('');\n    setIsFightButtonDisabled(false);\n  };\n\n  useEffect(() => {\n    if (playerHealth <= 0) {\n      setPopupMessage('You have been defeated by the monster!');\n      setShowPopup(true);\n    } else if (monsterHealth <= 0) {\n      setPopupMessage('You have slain the monster, congrats!');\n      setShowPopup(true);\n    }\n  }, [playerHealth, monsterHealth]);\n\n  const handlePopupClose = () => {\n    setShowPopup(false);\n    navigate('/');  // Navigate to the main square\n  };\n\n  return (\n    <>\n      <BattleArea>\n        <CharacterBox>\n          <CharacterImage>\n            Player Image\n            {bodyParts.map(part => (\n              <CheckboxLabel key={`defend-${part}`} className={part.toLowerCase().replace(' ', '-')}>\n                <input\n                  type=\"radio\"\n                  name=\"playerDefend\"\n                  value={part}\n                  checked={playerDefense === part}\n                  onChange={(e) => setPlayerDefense(e.target.value)}\n                />\n                {part}\n              </CheckboxLabel>\n            ))}\n          </CharacterImage>\n          <CharacterStats>\n            <MeterContainer>\n              <Meter value={playerHealth} color=\"#ff0000\" />\n            </MeterContainer>\n            <div>HP: {playerHealth}/100</div>\n          </CharacterStats>\n        </CharacterBox>\n        <FightButtonWrapper>\n          <FightButton onClick={handleFight} disabled={isFightButtonDisabled} />\n        </FightButtonWrapper>\n        <CharacterBox>\n          <CharacterImage>\n            Monster Image\n            {bodyParts.map(part => (\n              <CheckboxLabel key={`attack-${part}`} className={part.toLowerCase().replace(' ', '-')}>\n                <input\n                  type=\"radio\"\n                  name=\"playerAttack\"\n                  value={part}\n                  checked={playerAttack === part}\n                  onChange={(e) => setPlayerAttack(e.target.value)}\n                />\n                {part}\n              </CheckboxLabel>\n            ))}\n          </CharacterImage>\n          <CharacterStats>\n            <MeterContainer>\n              <Meter value={monsterHealth} color=\"#ff0000\" />\n            </MeterContainer>\n            <div>HP: {monsterHealth}/100</div>\n          </CharacterStats>\n        </CharacterBox>\n      </BattleArea>\n      <ChatLog ref={chatLogRef}>\n        {chatLog.map((log, index) => (\n          <div key={index}>{log}</div>\n        ))}\n      </ChatLog>\n      {showPopup && (\n        <PopupOverlay>\n          <PopupContent>\n            <p>{popupMessage}</p>\n            <PopupButton onClick={handlePopupClose}>OK</PopupButton>\n          </PopupContent>\n        </PopupOverlay>\n      )}\n    </>\n  );\n};\n\nexport default CombatSystem;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}